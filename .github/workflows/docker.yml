name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: image

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      DS_DOCKER_REGISTRY: docker.pkg.github.com
      DS_GITHUB_REPO: ${{ github.repository }}
      DS_DOCKER_IMAGE_NAME: ds
      DS_BUILD_DIR: ${{ github.workspace }}/build
    steps:
      - name: Setup - Install Go 1.14.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x
        id: go
      - name: Setup - Check out code
        uses: actions/checkout@v2
      - name: Setup - Set DS_VERSION
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          
          # Set DS_VERSION
          echo "::set-env name=DS_VERSION::$VERSION"
      - name: Setup - Set DS_DOCKER_TAG
        run: echo "::set-env name=DS_DOCKER_TAG::$DS_DOCKER_REGISTRY/$DS_GITHUB_REPO/$DS_DOCKER_IMAGE_NAME:$DS_VERSION"
      - name: Setup - Login to Docker Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login $DS_DOCKER_REGISTRY -u ${{ github.actor }} --password-stdin
      - name: Setup - Create build directory
        run: mkdir -p $DS_BUILD_DIR
      - name: Setup - Move conf/ to build directory
        run: cp -rf conf $DS_BUILD_DIR/conf
      - name: Setup - Substitute conf/app.yaml version
        uses: microsoft/variable-substitution@v1
        with:
          files: 'conf/app.yaml'
        env:
          version: ${{ env.DS_VERSION }}
      - name: Build - Get Go dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: Build - Go Build
        run: go build -o $DS_BUILD_DIR -v .
        env:
          GOOS: linux
          GOARCH: amd64
      - name: Build - Docker Build
        run: docker build . --file Dockerfile --tag $DS_DOCKER_TAG
      - name: Package - Docker Push
        run: docker push $DS_DOCKER_TAG
