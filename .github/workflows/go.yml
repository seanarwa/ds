name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      DS_BUILD_DIR: ${{ github.workspace }}/build
    strategy:
      matrix:
        platform:
          - os: darwin
            arch: 386
          - os: darwin
            arch: amd64
          - os: windows
            arch: 386
          - os: windows
            arch: amd64
          - os: linux
            arch: 386
          - os: linux
            arch: amd64
          - os: linux
            arch: arm
          - os: linux
            arch: arm64
    steps:
      - name: Install Go 1.14.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x
        id: go
      - name: Check out code
        uses: actions/checkout@v2
      - name: Get Go dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: Create build directory
        run: mkdir -p $DS_BUILD_DIR
      - name: Go Build
        run: go build -o $DS_BUILD_DIR -v .
        env:
          GOOS: ${{ matrix.platform.os }}
          GOARCH: ${{ matrix.platform.arch }}
      - name: Move conf
        run: cp -rf conf $DS_BUILD_DIR/conf
      - name: Check build directory
        run: ls $DS_BUILD_DIR
      - name: Set VERSION
        run: echo "::set-env name=DS_VERSION::$(cat ./VERSION)"
      - name: Substitute conf version
        uses: microsoft/variable-substitution@v1
        with:
          files: 'conf/app.yaml'
        env:
          version: ${{ env.DS_VERSION }}
      - name: Package built artifact
        uses: actions/upload-artifact@v2
        with:
          name: ds-${{ env.DS_VERSION }}-${{ matrix.platform.os }}-${{ matrix.platform.arch }}.zip
          path: ${{ env.DS_BUILD_DIR }}/*
